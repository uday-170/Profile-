import { NextApiRequest, NextApiResponse } from "next";
import { prisma } from "../../lib/prisma";
import { getSession } from "next-auth/react";

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  const session = await getSession({ req });
  if (!session || !(session as any).user?.id) return res.status(401).json({ error: "Unauthorized" });
  const userId = Number((session as any).user.id);

  if (req.method === "GET") {
    const certs = await prisma.certificate.findMany({ where: { userId }, orderBy: { createdAt: "desc" } });
    return res.json(certs);
  }

  if (req.method === "POST") {
    const { name, issuer, date, fileUrl } = req.body;
    if (!name) return res.status(400).json({ error: "Name required" });
    const d = date ? new Date(date) : undefined;
    const c = await prisma.certificate.create({
      data: { name, issuer, date: d, fileUrl, userId }
    });
    return res.status(201).json(c);
  }

  res.setHeader("Allow", ["GET", "POST"]);
  res.status(405).end();
}
