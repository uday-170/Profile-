import formidable from "formidable";
import fs from "fs";
import path from "path";
import { NextApiRequest, NextApiResponse } from "next";

export const config = {
  api: {
    bodyParser: false
  }
};

const uploadDir = path.join(process.cwd(), "/public/uploads");

// ensure upload directory exists
if (!fs.existsSync(uploadDir)) {
  fs.mkdirSync(uploadDir, { recursive: true });
}

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  if (req.method !== "POST") return res.status(405).end();

  const form = formidable({ multiples: false, uploadDir, keepExtensions: true });
  form.parse(req, (err, fields, files) => {
    if (err) {
      console.error(err);
      return res.status(500).json({ error: "Upload error" });
    }
    // assume single file field named 'file'
    const file = (files.file as formidable.File) || null;
    if (!file) return res.status(400).json({ error: "No file" });

    // return path accessible from browser
    const relative = `/uploads/${path.basename(file.filepath)}`;
    return res.status(200).json({ fileUrl: relative });
  });
}
