import { useEffect, useState } from "react";
import { useSession, signIn, signOut } from "next-auth/react";
import UploadForm from "../components/UploadForm";

type Project = {
  id: number;
  title: string;
  description?: string;
  link?: string;
  fileUrl?: string;
};

export default function Dashboard() {
  const { data: session } = useSession();
  const [projects, setProjects] = useState<Project[]>([]);
  const [title, setTitle] = useState("");

  useEffect(() => {
    if (session) fetch("/api/projects").then(r => r.json()).then(setProjects);
  }, [session]);

  if (!session) {
    return (
      <main style={{ padding: 20 }}>
        <h2>Please sign in</h2>
        <button onClick={() => signIn()}>Sign in</button>
      </main>
    );
  }

  async function addProject(e: any) {
    e.preventDefault();
    const body = { title, description: "", link: "" };
    const res = await fetch("/api/projects", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(body)
    });
    const p = await res.json();
    setProjects(prev => [p, ...prev]);
    setTitle("");
  }

  return (
    <main style={{ maxWidth: 900, margin: "24px auto", fontFamily: "system-ui, sans-serif" }}>
      <header style={{ display: "flex", justifyContent: "space-between", alignItems: "center" }}>
        <h1>Dashboard</h1>
        <div>
          <span style={{ marginRight: 12 }}>Signed in as {(session as any).user?.name}</span>
          <button onClick={() => signOut()}>Sign out</button>
        </div>
      </header>

      <section style={{ marginTop: 20 }}>
        <h2>Add Project (MVP)</h2>
        <form onSubmit={addProject}>
          <input value={title} onChange={e => setTitle(e.target.value)} placeholder="Project title" />
          <button type="submit">Add</button>
        </form>
      </section>

      <section style={{ marginTop: 30 }}>
        <h2>Your Projects</h2>
        {projects.length === 0 && <p>No projects yet.</p>}
        <ul>
          {projects.map(p => (
            <li key={p.id}>
              <strong>{p.title}</strong> {p.link && <a href={p.link}>link</a>}
              {p.fileUrl && <span> â€” <a href={p.fileUrl}>file</a></span>}
            </li>
          ))}
        </ul>
      </section>

      <section style={{ marginTop: 30 }}>
        <h2>Upload Resume / Files (MVP)</h2>
        <UploadForm onUploaded={(url) => alert(`Uploaded: ${url}`)} />
      </section>
    </main>
  );
}
